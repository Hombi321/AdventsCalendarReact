{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Gesch\\xE4ft\\\\2.Lehrjahr\\\\Repos\\\\CleanReact\\\\FirstReact\\\\myapplication\\\\src\\\\TodoApp\\\\App.js\";\n\n/*\r\nLet's practice props and mapping components on our todo list app!\r\n\r\nI've created a js file with some todos data in it, which I'm imported into this file. (Normally this data would come from an API call, not a local file). \r\n\r\nChallenge: Using the array map method, render a child component for each todo item in the todosData array and pass the relevant data to it.\r\n*/\nimport React from 'react';\nimport data from './Data.json';\nimport TodoItem from './TodoItem';\nexport class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      TODOS: data.todos\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(id) {\n    console.log(\"HANS\");\n    this.setState(prevState => {\n      const newList = prevState.TODOS.map(singleTodo => {\n        if (singleTodo.id === id) {\n          singleTodo.completed = !singleTodo.completed;\n        }\n\n        return singleTodo;\n      });\n      return {\n        TODOS: newList\n      };\n    });\n  }\n\n  render() {\n    const todoItem = this.state.TODOS.map(item => /*#__PURE__*/_jsxDEV(TodoItem, {\n      todo: item,\n      handleChange: this.hanldeChange\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 58\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: todoItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this);\n  }\n\n}\nexport default App; // function App() {\n//     const todoItems = data.todos.map( item => (<TodoItem key={item.id} todo={item}/>))\n//      //const todoItems = data.todos.map(item => <TodoItem key={item.id} item={item}/>)\n//     return (\n//     )\n// }","map":{"version":3,"sources":["D:/GeschÃ¤ft/2.Lehrjahr/Repos/CleanReact/FirstReact/myapplication/src/TodoApp/App.js"],"names":["React","data","TodoItem","App","Component","constructor","state","TODOS","todos","handleChange","bind","id","console","log","setState","prevState","newList","map","singleTodo","completed","render","todoItem","item","hanldeChange"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAGA,OAAO,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAiC;AAEpCC,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAEN,IAAI,CAACO;AAAb,KAAb;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAGDD,EAAAA,YAAY,CAACE,EAAD,EAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,SAAKC,QAAL,CAAeC,SAAD,IAAe;AACzB,YAAMC,OAAO,GAAGD,SAAS,CAACR,KAAV,CAAgBU,GAAhB,CAAqBC,UAAD,IAAgB;AAChD,YAAGA,UAAU,CAACP,EAAX,KAAkBA,EAArB,EAAwB;AACpBO,UAAAA,UAAU,CAACC,SAAX,GAAuB,CAACD,UAAU,CAACC,SAAnC;AACH;;AACD,eAAOD,UAAP;AACH,OALe,CAAhB;AAMJ,aAAO;AACHX,QAAAA,KAAK,EAAES;AADJ,OAAP;AAIC,KAXD;AAYH;;AACDI,EAAAA,MAAM,GAAE;AAEH,UAAMC,QAAQ,GAAG,KAAKf,KAAL,CAAWC,KAAX,CAAiBU,GAAjB,CAAsBK,IAAI,iBAAK,QAAC,QAAD;AAAwB,MAAA,IAAI,EAAEA,IAA9B;AAAoC,MAAA,YAAY,EAAE,KAAKC;AAAvD,OAAeD,IAAI,CAACX,EAApB;AAAA;AAAA;AAAA;AAAA,YAA/B,CAAjB;AAID,wBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACCU;AADD;AAAA;AAAA;AAAA;AAAA,YADA;AAIH;;AAlCmC;AAoCxC,eAAelB,GAAf,C,CACA;AAEA;AACA;AACA;AAEA;AACA","sourcesContent":["/*\r\nLet's practice props and mapping components on our todo list app!\r\n\r\nI've created a js file with some todos data in it, which I'm imported into this file. (Normally this data would come from an API call, not a local file). \r\n\r\nChallenge: Using the array map method, render a child component for each todo item in the todosData array and pass the relevant data to it.\r\n*/\r\n\r\n\r\nimport React from 'react'\r\nimport data from './Data.json'\r\nimport TodoItem from './TodoItem'\r\n\r\n\r\nexport class App extends React.Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {TODOS: data.todos}\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n\r\n    handleChange(id){\r\n        console.log(\"HANS\")\r\n        this.setState((prevState) => {\r\n            const newList = prevState.TODOS.map((singleTodo) => {\r\n                if(singleTodo.id === id){\r\n                    singleTodo.completed = !singleTodo.completed\r\n                }\r\n                return singleTodo\r\n            } )\r\n        return {\r\n            TODOS: newList\r\n        }\r\n        \r\n        })\r\n    }\r\n    render(){\r\n\r\n         const todoItem = this.state.TODOS.map( item => (<TodoItem key={item.id} todo={item} handleChange={this.hanldeChange}/>))\r\n\r\n\r\n        \r\n        return(\r\n        <div className=\"todo-list\">    \r\n        {todoItem}\r\n        </div>)\r\n    }\r\n}\r\nexport default App\r\n// function App() {\r\n\r\n//     const todoItems = data.todos.map( item => (<TodoItem key={item.id} todo={item}/>))\r\n//      //const todoItems = data.todos.map(item => <TodoItem key={item.id} item={item}/>)\r\n//     return (\r\n        \r\n//     )\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}