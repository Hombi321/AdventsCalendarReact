{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Gesch\\xE4ft\\\\2.Lehrjahr\\\\Repos\\\\CleanReact\\\\FirstReact\\\\myapplication\\\\src\\\\AdventsKalender\\\\App.js\";\nimport React from 'react';\nimport Door from './Door';\nimport AdventData from './DoorData.json';\nimport DataFromREST from './DataFromREST';\nimport DoorModal from './DoorModal';\nimport Modal from './Modal';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showModal = () => {\n      this.setState({\n        show: true\n      });\n    };\n\n    this.hideModal = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.state = {\n      show: false,\n      adventsData: []\n    };\n    this.handleDate = this.handleDate.bind(this);\n    this.componentDidMount = this.componentDidMount(this);\n    this.hideModal = this.hideModal.bind(this);\n  }\n\n  componentDidMount() {\n    DataFromREST.getData().then(response => {\n      const door = response.data;\n      this.setState({\n        adventsData: response.data\n      });\n    });\n  }\n\n  wrappInRows(doors) {\n    var returnString = \"<div className =\\\"row\\\">\";\n    doors.map(door => {\n      alert(door.id);\n      returnString = returnString + door;\n      return \"\";\n    });\n    returnString = returnString + \"</div>\";\n    return returnString;\n  }\n\n  handleDate(date) {\n    /*#__PURE__*/\n    _jsxDEV(DoorModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this);\n\n    var localDate = new Date(); //localDate  = localDate.getMonth( ) + 1 +'/'+ localDate.getDate( ) + '/' +localDate.getFullYear( );\n\n    localDate = \"12/10/2020\";\n    DataFromREST.postData(date).then(res => {\n      this.setState({\n        show: true\n      });\n      alert(res.data.text);\n\n      /*#__PURE__*/\n      _jsxDEV(Modal, {\n        show: res,\n        handleClose: this.hideModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this);\n    });\n\n    if (localDate === date || date <= localDate) {\n      this.state.adventsData.map(singleDoor => {\n        if (date == singleDoor.date) {}\n      });\n    } else {}\n  }\n\n  render() {\n    const doors = this.state.adventsData.map(item => {\n      return /*#__PURE__*/_jsxDEV(Door, {\n        item: item,\n        handleClick: this.handleDate\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.show,\n        handleClose: this.hideModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 18\n      }, this), doors]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/GeschÃ¤ft/2.Lehrjahr/Repos/CleanReact/FirstReact/myapplication/src/AdventsKalender/App.js"],"names":["React","Door","AdventData","DataFromREST","DoorModal","Modal","App","Component","constructor","props","showModal","setState","show","hideModal","state","adventsData","handleDate","bind","componentDidMount","getData","then","response","door","data","wrappInRows","doors","returnString","map","alert","id","date","localDate","Date","postData","res","text","singleDoor","render","item"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Door from './Door'\r\nimport AdventData from './DoorData.json'\r\nimport DataFromREST from './DataFromREST'\r\nimport DoorModal from './DoorModal'\r\nimport Modal from './Modal'\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            show : false,\r\n            adventsData:[]        }\r\n        this.handleDate = this.handleDate.bind(this)\r\n        this.componentDidMount = this.componentDidMount(this)\r\n        this.hideModal = this.hideModal.bind(this)\r\n        \r\n        \r\n    }\r\n    \r\n    componentDidMount(){\r\n        \r\n        DataFromREST.getData().then(response => {\r\n            \r\n            const door = response.data;\r\n            this.setState({adventsData: response.data})\r\n        });\r\n    }\r\n\r\n    wrappInRows(doors){\r\n        \r\n        var returnString = (\"<div className =\\\"row\\\">\") \r\n        doors.map(door => {\r\n            alert(door.id)\r\n            returnString  = returnString+ door\r\n        return (\"\")\r\n        })\r\n        returnString = returnString + \"</div>\"\r\n        return(returnString)\r\n    }\r\n    showModal = () => {\r\n        this.setState({ show: true });\r\n      };\r\n\r\n    hideModal = () => {\r\n        this.setState({ show: false });\r\n      };\r\n    \r\n    handleDate(date){\r\n\r\n        <DoorModal />\r\n        var localDate = new Date()\r\n        //localDate  = localDate.getMonth( ) + 1 +'/'+ localDate.getDate( ) + '/' +localDate.getFullYear( );\r\n        localDate = \"12/10/2020\"\r\n\r\n        DataFromREST.postData(date).then(res => {\r\n            this.setState({\r\n                show: true\r\n            });\r\n            alert(res.data.text); \r\n            <Modal show={res} handleClose={this.hideModal}></Modal>\r\n        \r\n        })\r\n        if(localDate === date || date <= localDate){\r\n        \r\n\r\n            this.state.adventsData.map(singleDoor => {if(date == singleDoor.date){\r\n            }}\r\n\r\n            )\r\n            \r\n        }else{\r\n            \r\n        }\r\n    }\r\n    render() {\r\n       \r\n        const doors = this.state.adventsData.map(item => {\r\n        \r\n       return(<Door key={item.id} item={item} handleClick={this.handleDate}/>)\r\n        \r\n        \r\n    })\r\n\r\n    \r\n        return (\r\n            <div className=\"container\">\r\n                 <Modal show={this.state.show} handleClose={this.hideModal}></Modal>\r\n                {doors}\r\n            </div>\r\n        )    \r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}