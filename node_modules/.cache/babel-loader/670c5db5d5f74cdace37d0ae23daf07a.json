{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Gesch\\xE4ft\\\\2.Lehrjahr\\\\Repos\\\\CleanReact\\\\FirstReact\\\\myapplication\\\\src\\\\AdventsKalender\\\\App.js\";\nimport React from 'react';\nimport Door from './Door';\nimport AdventData from './DoorData.json';\nimport DataFromREST from './DataFromREST';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      adventsData: []\n    };\n    this.handleDate = this.handleDate.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(DataFromREST.getData().then(response => {\n      this.setState({\n        users: response.data\n      });\n    }));\n  }\n\n  wrappInRows(doors) {\n    var returnString = \"<div className =\\\"row\\\">\";\n    doors.map(door => {\n      alert(door.id);\n      returnString = returnString + door;\n      return \"\";\n    });\n    returnString = returnString + \"</div>\";\n    return returnString;\n  }\n\n  handleDate(date) {\n    var localDate = new Date(); //localDate  = localDate.getMonth( ) + 1 +'/'+ localDate.getDate( ) + '/' +localDate.getFullYear( );\n\n    localDate = \"12/10/2020\";\n\n    if (localDate === date || date <= localDate) {\n      console.log(\"Ja diese törchen funktioniert.\");\n      alert(\"Yeah this door can be opened\");\n      this.state.adventsData.map(singleDoor => {\n        if (date == singleDoor.date) {\n          alert(`Typ des Törchen =  ${singleDoor.typ} `);\n        }\n      });\n    } else {\n      console.log(\"Diese Tür kannst du nicht öffnen\");\n      alert(\"This date is in the Future, Pleas wait for it\");\n    }\n  }\n\n  render() {\n    const doors = this.state.adventsData.map(item => {\n      return /*#__PURE__*/_jsxDEV(Door, {\n        item: item,\n        handleClick: this.handleDate\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: doors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Geschäft/2.Lehrjahr/Repos/CleanReact/FirstReact/myapplication/src/AdventsKalender/App.js"],"names":["React","Door","AdventData","DataFromREST","App","Component","constructor","props","state","adventsData","handleDate","bind","componentDidMount","console","log","getData","then","response","setState","users","data","wrappInRows","doors","returnString","map","door","alert","id","date","localDate","Date","singleDoor","typ","render","item"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAGA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAC;AADH,KAAb;AAEA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,OAAO,CAACC,GAAR,CACAX,YAAY,CAACY,OAAb,GAAuBC,IAAvB,CAA6BC,QAAD,IAAc;AACtC,WAAKC,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAEF,QAAQ,CAACG;AAAjB,OAAd;AACH,KAFD,CADA;AAIH;;AAEDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAEd,QAAIC,YAAY,GAAI,0BAApB;AACAD,IAAAA,KAAK,CAACE,GAAN,CAAUC,IAAI,IAAI;AACdC,MAAAA,KAAK,CAACD,IAAI,CAACE,EAAN,CAAL;AACAJ,MAAAA,YAAY,GAAIA,YAAY,GAAEE,IAA9B;AACJ,aAAQ,EAAR;AACC,KAJD;AAKAF,IAAAA,YAAY,GAAGA,YAAY,GAAG,QAA9B;AACA,WAAOA,YAAP;AACH;;AAEDb,EAAAA,UAAU,CAACkB,IAAD,EAAM;AACZ,QAAIC,SAAS,GAAG,IAAIC,IAAJ,EAAhB,CADY,CAEZ;;AACAD,IAAAA,SAAS,GAAG,YAAZ;;AAGA,QAAGA,SAAS,KAAKD,IAAd,IAAsBA,IAAI,IAAIC,SAAjC,EAA2C;AACvChB,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACAY,MAAAA,KAAK,CAAC,8BAAD,CAAL;AAEA,WAAKlB,KAAL,CAAWC,WAAX,CAAuBe,GAAvB,CAA2BO,UAAU,IAAI;AAAC,YAAGH,IAAI,IAAIG,UAAU,CAACH,IAAtB,EAA2B;AACjEF,UAAAA,KAAK,CAAE,sBAAqBK,UAAU,CAACC,GAAI,GAAtC,CAAL;AACH;AAAC,OAFF;AAMH,KAVD,MAUK;AACDnB,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAY,MAAAA,KAAK,CAAC,+CAAD,CAAL;AACH;AACJ;;AACDO,EAAAA,MAAM,GAAG;AAEL,UAAMX,KAAK,GAAG,KAAKd,KAAL,CAAWC,WAAX,CAAuBe,GAAvB,CAA2BU,IAAI,IAAI;AAElD,0BAAO,QAAC,IAAD;AAAoB,QAAA,IAAI,EAAEA,IAA1B;AAAgC,QAAA,WAAW,EAAE,KAAKxB;AAAlD,SAAWwB,IAAI,CAACP,EAAhB;AAAA;AAAA;AAAA;AAAA,cAAP;AAGF,KALiB,CAAd;AAQA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACKL;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA/D6B;;AAkElC,eAAelB,GAAf","sourcesContent":["import React from 'react'\r\nimport Door from './Door'\r\nimport AdventData from './DoorData.json'\r\nimport DataFromREST from './DataFromREST'\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            adventsData:[]        }\r\n        this.handleDate = this.handleDate.bind(this)\r\n    }\r\n    \r\n    componentDidMount(){\r\n        console.log(\r\n        DataFromREST.getData().then((response) => {\r\n            this.setState({users: response.data})\r\n        }));\r\n    }\r\n\r\n    wrappInRows(doors){\r\n        \r\n        var returnString = (\"<div className =\\\"row\\\">\") \r\n        doors.map(door => {\r\n            alert(door.id)\r\n            returnString  = returnString+ door\r\n        return (\"\")\r\n        })\r\n        returnString = returnString + \"</div>\"\r\n        return(returnString)\r\n    }\r\n    \r\n    handleDate(date){\r\n        var localDate = new Date()\r\n        //localDate  = localDate.getMonth( ) + 1 +'/'+ localDate.getDate( ) + '/' +localDate.getFullYear( );\r\n        localDate = \"12/10/2020\"\r\n\r\n        \r\n        if(localDate === date || date <= localDate){\r\n            console.log(\"Ja diese törchen funktioniert.\")\r\n            alert(\"Yeah this door can be opened\")\r\n\r\n            this.state.adventsData.map(singleDoor => {if(date == singleDoor.date){\r\n                alert(`Typ des Törchen =  ${singleDoor.typ} `)\r\n            }}\r\n\r\n            )\r\n            \r\n        }else{\r\n            console.log(\"Diese Tür kannst du nicht öffnen\")\r\n            alert(\"This date is in the Future, Pleas wait for it\")\r\n        }\r\n    }\r\n    render() {\r\n        \r\n        const doors = this.state.adventsData.map(item => {\r\n        \r\n       return(<Door key={item.id} item={item} handleClick={this.handleDate}/>)\r\n        \r\n        \r\n    })\r\n\r\n    \r\n        return (\r\n            <div className=\"container\">\r\n                {doors}\r\n            </div>\r\n        )    \r\n    }\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}