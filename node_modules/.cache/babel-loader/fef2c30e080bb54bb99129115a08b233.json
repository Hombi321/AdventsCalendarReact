{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Gesch\\xE4ft\\\\2.Lehrjahr\\\\Repos\\\\CleanReact\\\\FirstReact\\\\myapplication\\\\src\\\\TodoApp\\\\App.js\";\n\n/*\r\nLet's practice props and mapping components on our todo list app!\r\n\r\nI've created a js file with some todos data in it, which I'm imported into this file. (Normally this data would come from an API call, not a local file). \r\n\r\nChallenge: Using the array map method, render a child component for each todo item in the todosData array and pass the relevant data to it.\r\n*/\nimport React from 'react';\nimport data from './Data.json';\nimport TodoItem from './TodoItem';\nexport class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: data.todos\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(id) {\n    this.setState(prevState => {\n      const updatedTodos = prevState.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n\n        return todo;\n      });\n      return {\n        TODOS: updatedTodos\n      };\n    });\n  } // handleChange(id){\n  //     console.log(\"HANS\")\n  //     this.setState((prevState) => {\n  //         const newList = prevState.TODOS.map((singleTodo) => {\n  //             if(singleTodo.id === id){\n  //                 singleTodo.completed = !singleTodo.completed\n  //             }\n  //             return singleTodo\n  //         } )\n  //     return {\n  //         TODOS: newList\n  //     }\n  //     })\n  // }\n\n\n  render() {\n    const todoItem = this.state.todos.map(singleItem => /*#__PURE__*/_jsxDEV(TodoItem, {\n      theTodo: singleItem,\n      handleChange: this.handleChange\n    }, singleItem.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 64\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: todoItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this);\n  }\n\n}\nexport default App; // function App() {\n//     const todoItems = data.todos.map( item => (<TodoItem key={item.id} todo={item}/>))\n//      //const todoItems = data.todos.map(item => <TodoItem key={item.id} item={item}/>)\n//     return (\n//     )\n// }","map":{"version":3,"sources":["D:/GeschÃ¤ft/2.Lehrjahr/Repos/CleanReact/FirstReact/myapplication/src/TodoApp/App.js"],"names":["React","data","TodoItem","App","Component","constructor","state","todos","handleChange","bind","id","setState","prevState","updatedTodos","map","todo","completed","TODOS","render","todoItem","singleItem"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAGA,OAAO,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAiC;AAEpCC,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAEN,IAAI,CAACM;AAAb,KAAb;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACE,EAAD,EAAK;AACb,SAAKC,QAAL,CAAcC,SAAS,IAAI;AACvB,YAAMC,YAAY,GAAGD,SAAS,CAACL,KAAV,CAAgBO,GAAhB,CAAoBC,IAAI,IAAI;AAC7C,YAAIA,IAAI,CAACL,EAAL,KAAYA,EAAhB,EAAoB;AAChBK,UAAAA,IAAI,CAACC,SAAL,GAAiB,CAACD,IAAI,CAACC,SAAvB;AACH;;AACD,eAAOD,IAAP;AACH,OALoB,CAArB;AAMA,aAAO;AACHE,QAAAA,KAAK,EAAEJ;AADJ,OAAP;AAGH,KAVD;AAWH,GApBmC,CAsBpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AACAK,EAAAA,MAAM,GAAE;AAEH,UAAMC,QAAQ,GAAG,KAAKb,KAAL,CAAWC,KAAX,CAAiBO,GAAjB,CAAsBM,UAAU,iBAAK,QAAC,QAAD;AAA8B,MAAA,OAAO,EAAEA,UAAvC;AAAmD,MAAA,YAAY,EAAE,KAAKZ;AAAtE,OAAeY,UAAU,CAACV,EAA1B;AAAA;AAAA;AAAA;AAAA,YAArC,CAAjB;AAID,wBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACCS;AADD;AAAA;AAAA;AAAA;AAAA,YADA;AAIH;;AA/CmC;AAiDxC,eAAehB,GAAf,C,CACA;AAEA;AACA;AACA;AAEA;AACA","sourcesContent":["/*\r\nLet's practice props and mapping components on our todo list app!\r\n\r\nI've created a js file with some todos data in it, which I'm imported into this file. (Normally this data would come from an API call, not a local file). \r\n\r\nChallenge: Using the array map method, render a child component for each todo item in the todosData array and pass the relevant data to it.\r\n*/\r\n\r\n\r\nimport React from 'react'\r\nimport data from './Data.json'\r\nimport TodoItem from './TodoItem'\r\n\r\n\r\nexport class App extends React.Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {todos: data.todos}\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleChange(id) {\r\n        this.setState(prevState => {\r\n            const updatedTodos = prevState.todos.map(todo => {\r\n                if (todo.id === id) {\r\n                    todo.completed = !todo.completed\r\n                }\r\n                return todo\r\n            })\r\n            return {\r\n                TODOS: updatedTodos\r\n            }\r\n        })\r\n    }\r\n\r\n    // handleChange(id){\r\n    //     console.log(\"HANS\")\r\n    //     this.setState((prevState) => {\r\n    //         const newList = prevState.TODOS.map((singleTodo) => {\r\n    //             if(singleTodo.id === id){\r\n    //                 singleTodo.completed = !singleTodo.completed\r\n    //             }\r\n    //             return singleTodo\r\n    //         } )\r\n    //     return {\r\n    //         TODOS: newList\r\n    //     }\r\n        \r\n    //     })\r\n    // }\r\n    render(){\r\n\r\n         const todoItem = this.state.todos.map( singleItem => (<TodoItem key={singleItem.id} theTodo={singleItem} handleChange={this.handleChange}/>))\r\n\r\n\r\n        \r\n        return(\r\n        <div className=\"todo-list\">    \r\n        {todoItem}\r\n        </div>)\r\n    }\r\n}\r\nexport default App\r\n// function App() {\r\n\r\n//     const todoItems = data.todos.map( item => (<TodoItem key={item.id} todo={item}/>))\r\n//      //const todoItems = data.todos.map(item => <TodoItem key={item.id} item={item}/>)\r\n//     return (\r\n        \r\n//     )\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}