{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Gesch\\xE4ft\\\\2.Lehrjahr\\\\Repos\\\\CleanReact\\\\FirstReact\\\\myapplication\\\\src\\\\TodoApp\\\\App.js\";\nimport React from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport Data from \"./Data.json\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: Data.todosData\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(id, todos) {\n    console.log(\"Id Bekommen: \" + id);\n    const updatedTodos = this.state.todos.map(todo => {\n      if (todo.id === id) {\n        console.log(\"Die Ids Stimmen überein. Id: \" + todo.id);\n        console.log(\"Completet vorher: \" + todo.completed);\n        todo.completed = !todo.completed;\n        console.log(\"Completet nachher: \" + todo.completed);\n      }\n\n      return todo;\n    });\n    this.setState(prevState => {\n      return {\n        todos: updatedTodos\n      };\n    });\n  }\n\n  render() {\n    const todoItems = this.state.todos.map(item => /*#__PURE__*/_jsxDEV(TodoItem, {\n      item: item,\n      handleChange: this.handleChange\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 56\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: todoItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Geschäft/2.Lehrjahr/Repos/CleanReact/FirstReact/myapplication/src/TodoApp/App.js"],"names":["React","TodoItem","Data","App","Component","constructor","state","todos","todosData","handleChange","bind","id","console","log","updatedTodos","map","todo","completed","setState","prevState","render","todoItems","item"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAEL,IAAI,CAACM;AADH,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACE,EAAD,EAAKJ,KAAL,EAAY;AACpBK,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAiBF,EAA7B;AAEI,UAAMG,YAAY,GAAG,KAAKR,KAAL,CAAWC,KAAX,CAAiBQ,GAAjB,CAAqBC,IAAI,IAAI;AAC9C,UAAIA,IAAI,CAACL,EAAL,KAAYA,EAAhB,EAAoB;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAY,kCAAiCG,IAAI,CAACL,EAAlD;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAsBG,IAAI,CAACC,SAAvC;AACAD,QAAAA,IAAI,CAACC,SAAL,GAAiB,CAACD,IAAI,CAACC,SAAvB;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAuBG,IAAI,CAACC,SAAxC;AAEH;;AACD,aAAOD,IAAP;AACH,KAToB,CAArB;AAUA,SAAKE,QAAL,CAAcC,SAAS,IAAI;AAC3B,aAAO;AAEHZ,QAAAA,KAAK,EAAEO;AAFJ,OAAP;AAIH,KALG;AAMP;;AAEDM,EAAAA,MAAM,GAAG;AACL,UAAMC,SAAS,GAAG,KAAKf,KAAL,CAAWC,KAAX,CAAiBQ,GAAjB,CAAqBO,IAAI,iBAAI,QAAC,QAAD;AAAwB,MAAA,IAAI,EAAEA,IAA9B;AAAoC,MAAA,YAAY,EAAE,KAAKb;AAAvD,OAAea,IAAI,CAACX,EAApB;AAAA;AAAA;AAAA;AAAA,YAA7B,CAAlB;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACKU;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAtC6B;;AAyClC,eAAelB,GAAf","sourcesContent":["import React from \"react\"\r\nimport TodoItem from \"./TodoItem\"\r\nimport Data from \"./Data.json\"\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            todos: Data.todosData\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n    \r\n    handleChange(id, todos) {\r\n        console.log(\"Id Bekommen: \" +id)\r\n        \r\n            const updatedTodos = this.state.todos.map(todo => {\r\n                if (todo.id === id) {\r\n                    console.log(\"Die Ids Stimmen überein. Id: \" +todo.id)\r\n                    console.log(\"Completet vorher: \" +todo.completed)\r\n                    todo.completed = !todo.completed\r\n                    console.log(\"Completet nachher: \" +todo.completed)\r\n                    \r\n                }\r\n                return todo\r\n            })\r\n            this.setState(prevState => {\r\n            return {\r\n                \r\n                todos: updatedTodos\r\n            }\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        const todoItems = this.state.todos.map(item => <TodoItem key={item.id} item={item} handleChange={this.handleChange}/>)\r\n        \r\n        return (\r\n            <div className=\"todo-list\">\r\n                {todoItems}\r\n            </div>\r\n        )    \r\n    }\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}