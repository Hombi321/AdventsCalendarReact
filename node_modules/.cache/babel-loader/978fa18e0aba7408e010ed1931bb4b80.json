{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Gesch\\xE4ft\\\\2.Lehrjahr\\\\Repos\\\\CleanReact\\\\FirstReact\\\\myapplication\\\\src\\\\TodoApp\\\\App.js\";\n\n/*\r\nLet's practice props and mapping components on our todo list app!\r\n\r\nI've created a js file with some todos data in it, which I'm imported into this file. (Normally this data would come from an API call, not a local file). \r\n\r\nChallenge: Using the array map method, render a child component for each todo item in the todosData array and pass the relevant data to it.\r\n*/\nimport React from 'react';\nimport data from './Data.json';\nimport TodoItem from './TodoItem';\nexport class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      TODOS: data.todos,\n      todoItems: null\n    };\n    this.hanldeChange = this.hanldeChange.bind(this);\n  }\n\n  hanldeChange(id) {\n    console.log(\"Changed \" + id);\n  }\n\n  render() {\n    this.state.todoItems = this.state.TODOS.map(item => /*#__PURE__*/_jsxDEV(TodoItem, {\n      todo: item,\n      hanldeChange: this.hanldeChange\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 63\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: this.state.todoItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this);\n  }\n\n}\nexport default App; // function App() {\n//     const todoItems = data.todos.map( item => (<TodoItem key={item.id} todo={item}/>))\n//      //const todoItems = data.todos.map(item => <TodoItem key={item.id} item={item}/>)\n//     return (\n//     )\n// }","map":{"version":3,"sources":["D:/GeschÃ¤ft/2.Lehrjahr/Repos/CleanReact/FirstReact/myapplication/src/TodoApp/App.js"],"names":["React","data","TodoItem","App","Component","constructor","state","TODOS","todos","todoItems","hanldeChange","bind","id","console","log","render","map","item"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAGA,OAAO,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAiC;AAEpCC,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAEN,IAAI,CAACO,KAAb;AAAoBC,MAAAA,SAAS,EAAE;AAA/B,KAAb;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAGDD,EAAAA,YAAY,CAACE,EAAD,EAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAYF,EAAxB;AACH;;AACDG,EAAAA,MAAM,GAAE;AAEJ,SAAKT,KAAL,CAAWG,SAAX,GAAuB,KAAKH,KAAL,CAAWC,KAAX,CAAiBS,GAAjB,CAAsBC,IAAI,iBAAK,QAAC,QAAD;AAAwB,MAAA,IAAI,EAAEA,IAA9B;AAAoC,MAAA,YAAY,EAAE,KAAKP;AAAvD,OAAeO,IAAI,CAACL,EAApB;AAAA;AAAA;AAAA;AAAA,YAA/B,CAAvB;AAGA,wBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACC,KAAKN,KAAL,CAAWG;AADZ;AAAA;AAAA;AAAA;AAAA,YADA;AAIH;;AArBmC;AAuBxC,eAAeN,GAAf,C,CACA;AAEA;AACA;AACA;AAEA;AACA","sourcesContent":["/*\r\nLet's practice props and mapping components on our todo list app!\r\n\r\nI've created a js file with some todos data in it, which I'm imported into this file. (Normally this data would come from an API call, not a local file). \r\n\r\nChallenge: Using the array map method, render a child component for each todo item in the todosData array and pass the relevant data to it.\r\n*/\r\n\r\n\r\nimport React from 'react'\r\nimport data from './Data.json'\r\nimport TodoItem from './TodoItem'\r\n\r\n\r\nexport class App extends React.Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {TODOS: data.todos, todoItems: null}\r\n        this.hanldeChange = this.hanldeChange.bind(this)\r\n    }\r\n\r\n\r\n    hanldeChange(id){\r\n        console.log(\"Changed \"+ id)\r\n    }\r\n    render(){\r\n\r\n        this.state.todoItems = this.state.TODOS.map( item => (<TodoItem key={item.id} todo={item} hanldeChange={this.hanldeChange}/>))\r\n\r\n\r\n        return(\r\n        <div className=\"todo-list\">    \r\n        {this.state.todoItems}\r\n        </div>)\r\n    }\r\n}\r\nexport default App\r\n// function App() {\r\n\r\n//     const todoItems = data.todos.map( item => (<TodoItem key={item.id} todo={item}/>))\r\n//      //const todoItems = data.todos.map(item => <TodoItem key={item.id} item={item}/>)\r\n//     return (\r\n        \r\n//     )\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}